# ===================================
# KANBAN SYSTEM - ENVIRONMENT CONFIGURATION
# ===================================
# Copy this file to .env and fill in your actual values
# Never commit .env to version control!

# ===================================
# APPLICATION SETTINGS
# ===================================
# Basic application configuration
APP_NAME=Kanban System
APP_VERSION=2.0.0
NODE_ENV=development
# Available: development, production, test

# Server configuration
PORT=3000
HOST=localhost
# In production, use 0.0.0.0 to bind to all interfaces
# HOST=0.0.0.0

# Timezone for date/time operations
TZ=Asia/Jakarta
# Supported timezone: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones

# Default language for the application
DEFAULT_LANGUAGE=en
# Supported: id (Indonesian), en (English)

# ===================================
# API CONFIGURATION
# ===================================
# API versioning and documentation settings
API_PREFIX=/api/v2
# Base path for all API endpoints

API_DOCS_ENABLED=true
# Enable/disable API documentation endpoint
API_DOCS_PATH=/docs
# Path to access API documentation

API_VERSIONING=false
# Enable API versioning in headers
API_DEFAULT_VERSION=v2
# Default API version if versioning is enabled

API_ETAG_ENABLED=true
# Enable ETag headers for caching

# ===================================
# DATABASE CONFIGURATION
# ===================================
# PostgreSQL database connection
DATABASE_URL=postgresql://username:password@localhost:5432/db_kanban
# Format: postgresql://user:password@host:port/database

# Database connection settings
DATABASE_SSL=false
# Enable SSL for database connection (recommended for production)
DATABASE_POOL_SIZE=10
# Maximum number of database connections in pool
DATABASE_CONNECTION_TIMEOUT=10000
# Connection timeout in milliseconds
DATABASE_QUERY_TIMEOUT=30000
# Query timeout in milliseconds
DATABASE_LOG_QUERIES=false
# Log all database queries (useful for debugging, disable in production)

# ===================================
# SECURITY CONFIGURATION
# ===================================
# JWT (JSON Web Token) settings
JWT_SECRET=your_super_secure_jwt_secret_min_32_characters_long
# IMPORTANT: Use a strong, unique secret in production (min 32 chars)
ACCESS_TOKEN_EXPIRY=30m
# Access token expiration time (e.g., 15m, 30m, 1h, 2h)
REFRESH_TOKEN_EXPIRY=1d
# Refresh token expiration time (e.g., 1d, 7d, 14d, 30d)
JWT_ISSUER=kanban-system
# JWT issuer identifier
JWT_AUDIENCE=kanban-users
# JWT audience identifier

# Password hashing
BCRYPT_ROUNDS=12
# BCrypt hash rounds (10-15 recommended, higher = more secure but slower)

# Rate limiting
RATE_LIMIT_WINDOW=900000
# Rate limit window in milliseconds (15 minutes = 900000)
RATE_LIMIT_MAX=100
# Maximum requests per window per IP

# CORS (Cross-Origin Resource Sharing)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173
# Comma-separated list of allowed origins

# Session security
SESSION_SECRET=your_session_secret_for_cookies
# Secret for session cookies (if using sessions)

# Security features
CSRF_ENABLED=false
# Enable CSRF protection (set to true in production with forms)
HELMET_ENABLED=true
# Enable Helmet security headers
TRUST_PROXY=false
# Set to true if behind a reverse proxy (nginx, cloudflare, etc.)
STRICT_SSL=true
# Enforce HTTPS in production

# ===================================
# FRONTEND CONNECTION
# ===================================
# Frontend application URL
FRONTEND_URL=http://localhost:5173
# URL where your frontend application is running
# In production: https://yourdomain.com

# ===================================
# EMAIL CONFIGURATION
# ===================================
# Email service settings for notifications
EMAIL_SERVICE=gmail
# Email service provider (gmail, outlook, custom)
EMAIL_HOST=smtp.gmail.com
# SMTP host (only needed if not using a service)
EMAIL_PORT=587
# SMTP port (587 for TLS, 465 for SSL, 25 for non-secure)
EMAIL_SECURE=false
# Use SSL/TLS (true for port 465, false for port 587)

# Email credentials
EMAIL_USER=your_email@gmail.com
# Email address for sending notifications
EMAIL_PASS=your_app_password
# App password (not regular password!) - Generate from your email provider

# Email settings
EMAIL_FROM=PC Department <pcdept@gmail.com>
# Default "From" address for outgoing emails
EMAIL_REPLY_TO=noreply@yourcompany.com
# Reply-to address (optional)

# Email retry settings
EMAIL_MAX_RETRIES=3
# Maximum retry attempts for failed emails
EMAIL_RETRY_DELAY=5000
# Delay between retries in milliseconds

# ===================================
# WHATSAPP (FONNTE) CONFIGURATION
# ===================================
# WhatsApp notification service via Fonnte
WHATSAPP_ENABLED=true
# Enable/disable WhatsApp notifications
FONNTE_API_KEY=your_fonnte_api_key
# API key from Fonnte dashboard: https://fonnte.com
FONNTE_API_URL=https://api.fonnte.com/send
# Fonnte API endpoint (usually doesn't need to change)

# WhatsApp settings
WA_DEFAULT_COUNTRY_CODE=62
# Default country code for phone numbers (62 = Indonesia)
WA_MAX_RETRIES=2
# Maximum retry attempts for failed WhatsApp messages
WA_RETRY_DELAY=3000
# Delay between retries in milliseconds

# ===================================
# LOGGING CONFIGURATION
# ===================================
# Logging levels and settings
LOG_LEVEL=info
# Logging level: error, warn, info, debug, silly
LOG_CONSOLE=true
# Enable console logging
LOG_FILE=true
# Enable file logging
LOG_DIRECTORY=./logs
# Directory to store log files

# Log rotation settings
LOG_MAX_FILES=14d
# Keep log files for 14 days
LOG_MAX_SIZE=20m
# Maximum size per log file (20 MB)

# Specialized logging
LOG_SECURITY=true
# Enable security event logging
LOG_PERFORMANCE=true
# Enable performance metrics logging

# ===================================
# MONITORING & HEALTH CHECKS
# ===================================
# System monitoring settings
MONITORING_ENABLED=true
# Enable system monitoring and health checks
HEALTH_CHECK_INTERVAL=300000
# Health check interval in milliseconds (5 minutes)
METRICS_RETENTION=86400000
# How long to keep metrics in memory (24 hours)

# Alert thresholds
ALERT_MEMORY_THRESHOLD=500
# Memory usage alert threshold in MB
ALERT_RESPONSE_TIME=5000
# Response time alert threshold in milliseconds
ALERT_ERROR_RATE=0.05
# Error rate alert threshold (5% = 0.05)

# ===================================
# FILE UPLOAD CONFIGURATION
# ===================================
# File upload settings (if implementing file attachments)
FILE_UPLOAD_ENABLED=false
# Enable file upload functionality
UPLOAD_MAX_SIZE=5242880
# Maximum file size in bytes (5MB = 5242880)
UPLOAD_ALLOWED_TYPES=image/jpeg,image/png,image/gif,application/pdf,text/plain
# Comma-separated list of allowed MIME types
UPLOAD_DESTINATION=./uploads
# Directory to store uploaded files
UPLOAD_VIRUS_SCAN=false
# Enable virus scanning for uploaded files (requires additional setup)

# ===================================
# CACHING CONFIGURATION
# ===================================
# Cache settings (for future implementation)
CACHE_ENABLED=false
# Enable caching system
CACHE_TYPE=memory
# Cache type: memory, redis
REDIS_URL=redis://localhost:6379
# Redis connection URL (if using Redis cache)
CACHE_DEFAULT_TTL=3600
# Default cache TTL in seconds (1 hour)
CACHE_MAX_KEYS=10000
# Maximum number of keys in memory cache

# ===================================
# BUSINESS RULES CONFIGURATION
# ===================================
# Approval workflow settings
APPROVAL_DEADLINE_DAYS=3
# Days to complete approval before warning
AUTO_ESCALATION_ENABLED=false
# Auto-escalate overdue approvals
ESCALATION_DAYS=2
# Days after deadline to escalate
MAX_PENDING_REQUESTS=50
# Maximum pending requests per user

# Kanban request settings
KANBAN_MAX_FUTURE_DAYS=365
# Maximum days in future for production date
KANBAN_ALLOW_PAST_DATE=false
# Allow production dates in the past
KANBAN_AUTO_CLEANUP_DAYS=90
# Auto-cleanup completed requests after X days

# Department settings
PC_DEPARTMENT_ID=1
# Production Control department ID in database
CROSS_DEPT_APPROVAL=false
# Allow cross-department approvals

# ===================================
# DEVELOPMENT SETTINGS
# ===================================
# Development-only features (automatically disabled in production)
DEBUG_ENABLED=false
# Enable debug mode (detailed error messages)
MOCK_NOTIFICATIONS=false
# Use mock notifications instead of real ones
SEED_DATABASE=false
# Seed database with sample data on startup
HOT_RELOAD_ENABLED=false
# Enable hot reloading for development
PROFILER_ENABLED=false
# Enable performance profiler

# ===================================
# PRODUCTION SETTINGS
# ===================================
# Production optimizations (automatically enabled in production)
COMPRESSION_ENABLED=true
# Enable response compression
MINIFICATION_ENABLED=false
# Enable JavaScript/CSS minification (if serving static files)
PRODUCTION_CACHING=true
# Enable production-level caching

# ===================================
# EXTERNAL API KEYS
# ===================================
# Third-party service API keys
API_KEY=your_external_api_key
# External API key for integrations (if needed)

# ===================================
# BACKUP & MAINTENANCE
# ===================================
# Automated maintenance settings
AUTO_BACKUP_ENABLED=false
# Enable automatic database backups
BACKUP_SCHEDULE=0 2 * * *
# Backup schedule (cron format: daily at 2 AM)
BACKUP_RETENTION_DAYS=30
# Keep backups for 30 days

# Cleanup settings
AUTO_CLEANUP_ENABLED=true
# Enable automatic cleanup of old data
CLEANUP_SCHEDULE=0 3 * * 0
# Cleanup schedule (cron format: weekly on Sunday at 3 AM)

# ===================================
# EXAMPLE VALUES FOR DEVELOPMENT
# ===================================
# Uncomment and modify these for quick development setup:

# DATABASE_URL=postgresql://kanban_user:kanban_pass@localhost:5432/kanban_development
# JWT_SECRET=development_secret_key_min_32_characters_long_for_security
# EMAIL_USER=your.development.email@gmail.com
# EMAIL_PASS=your_gmail_app_password
# FONNTE_API_KEY=your_fonnte_development_api_key
# SESSION_SECRET=development_session_secret_key

# ===================================
# SECURITY NOTES
# ===================================
# 1. Never commit the actual .env file to version control
# 2. Use strong, unique secrets for JWT_SECRET and SESSION_SECRET
# 3. Use app passwords for EMAIL_PASS, not your regular email password
# 4. Enable SSL/HTTPS in production
# 5. Set NODE_ENV=production in production environment
# 6. Use environment-specific database URLs
# 7. Rotate secrets regularly in production
# 8. Monitor logs for security events
# 9. Keep this file secure and limit access